name: pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

      - name: Generate test coverage
        run: npm run coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4.4.0
        with:
          name: coverage-report
          path: coverage/

  code-analysis:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check Java version
        run: java -version

      - name: Install dependencies
        run: npm install

      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #gerado automaticamente pelo github
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} #gerado manualmente no sonarCloud
        run: npm run sonar

  build:
    name: build
    runs-on: ubuntu-latest
    needs: code-analysis

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: #### COLOCAR O NOME DA IMAGEM DOCKER AQUI (EX: guilhermelimasoares9/app-node-18-products)
          tag-sha: true

      - name: QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          cache-from: type=registry,ref=NOME DA IMAGEM DOCKER AQUI
          cache-to: type=inline